parameters:
# ubuntu near-equivalent list of yum installs in https://github.com/ROCm/ROCm-docker/blob/master/dev/Dockerfile-centos-7-complete
# plus additional packages found through iterative testing of pipeline
- name: aptPackages
  type: object
  default:
    - python3-dev
    - python3-pip
- name: pipModules
  type: object
  default:
    - cget
    - cmake
# list from https://github.com/pytorch/builder/blob/main/manywheel/build_rocm.sh
- name: rocmDependencies
  type: object
  default:
    - rocm-cmake
    - llvm-project
    - ROCR-Runtime
    - clr
    - rocminfo
    - rocprofiler-register
    - rocm_smi_lib
    - rocm-core
    - aomp
    - aomp-extras
    - hipBLAS-common
    - hipBLASLt

trigger: none
pr: none

jobs:
- job: pipeline_debug
  timeoutInMinutes: 120
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool:
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  steps:
# copy environment setup from https://github.com/pytorch/builder/blob/main/manywheel/Dockerfile
# but instead of centos, use ubuntu environment
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - task: Bash@3
    displayName: Add Python site-packages binaries to path
    inputs:
      targetType: inline
      script: |
        USER_BASE=$(python3 -m site --user-base)
        echo "##vso[task.prependpath]$USER_BASE/bin"
        echo $USER_BASE
        echo $PATH
        echo "##vso[task.setvariable variable=USER_BASE_BIN]$USER_BASE/bin"
        echo "USER_BASE_BIN is set to: $USER_BASE/bin"
        echo "USER_BASE_BIN is set to: $USER_BASE_BIN"
        echo "##vso[task.prependpath]USER_BASE_BIN"
        echo "Current PATH: $PATH"
        echo $USER_BASE
        echo $PATH
  - task: Bash@3
    displayName: cmake ver
    inputs:
      targetType: inline
      script: cmake --version
