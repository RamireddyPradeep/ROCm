parameters:
# ubuntu near-equivalent list of yum installs in https://github.com/ROCm/ROCm-docker/blob/master/dev/Dockerfile-centos-7-complete
# plus additional packages found through iterative testing of pipeline
- name: aptPackages
  type: object
  default:
    - python3-dev
    - python3-pip
- name: pipModules
  type: object
  default:
    - cget
    - cmake
# list from https://github.com/pytorch/builder/blob/main/manywheel/build_rocm.sh
- name: rocmDependencies
  type: object
  default:
    - rocm-cmake
    - llvm-project
    - ROCR-Runtime
    - clr
    - rocminfo
    - rocprofiler-register
    - rocm_smi_lib
    - rocm-core
    - aomp
    - aomp-extras
    - hipBLAS-common
    - hipBLASLt

trigger: none
pr: none

jobs:
- job: pipeline_debug
  timeoutInMinutes: 120
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool:
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  steps:
  - checkout: self
#    persistCredentials: true
  - script: |
      # Define Variables
      ORGANIZATION="rocm-ci"  # Replace with your Azure DevOps organization name
      PROJECT="ROCm-CI"  # Replace with your Azure DevOps project name
      BUILD_ID=13459  # This is the build ID provided by the pipeline

      # Set the API URL to retrieve build details
      API_URL1="https://dev.azure.com/${ORGANIZATION}/${PROJECT}/_apis/pipelines/145/runs/13459?api-version=6.0-preview.1"

      echo "DEFINITIONS!!!"

      # Make the API call to get the build details (including commit hashes)
      response1=$(curl -s -u :$(System.AccessToken) $API_URL1)
      echo $response1

      REPOS_COUNT=$(echo $response1 | jq '.resources.repositories | length')
      echo "Found $REPOS_COUNT repositories in this run."

      for (( i=0; i<$REPOS_COUNT; i++ ))
      do
        # Extract the repository name and commit hash for each repository
        REPO_NAME=$(echo $response1 | jq -r ".resources.repositories | keys | .[$i]")
        REPO_COMMIT_HASH=$(echo $response1 | jq -r ".resources.repositories[\"$REPO_NAME\"].version")

        # Extract fullName, refName, and version (commit hash) for each repository
        REPO_FULL_NAME=$(echo $response1 | jq -r ".resources.repositories | to_entries | .[$i].value.repository.fullName")
        REPO_REF_NAME=$(echo $response1 | jq -r ".resources.repositories | to_entries | .[$i].value.refName")
        REPO_COMMIT_HASH=$(echo $response1 | jq -r ".resources.repositories | to_entries | .[$i].value.version")

        # Print the repository details
        echo "Repository $i:"
        echo "  Full Name: $REPO_FULL_NAME"
        echo "  Ref Name: $REPO_REF_NAME"
        echo "  Commit Hash: $REPO_COMMIT_HASH"

        # below is example using github api
        # github_commit_response=$(curl "https://api.github.com/repos/ROCm/$REPO_NAME/commits/$REPO_COMMIT_HASH")

        # Extract and print relevant information from the GitHub commit response
        # COMMIT_MESSAGE=$(echo $github_commit_response | jq -r '.commit.message')
        # COMMIT_AUTHOR=$(echo $github_commit_response | jq -r '.commit.author.name')
        # echo "Commit message for $REPO_NAME: $COMMIT_MESSAGE"
        # echo "Commit author for $REPO_NAME: $COMMIT_AUTHOR"
      done
    displayName: 'Fetch Commit Details for Build'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)