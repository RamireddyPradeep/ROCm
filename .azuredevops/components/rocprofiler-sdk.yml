parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - build-essential
    - python3-pip
    - libdrm-dev
    - libdw-dev
    - libelf-dev
    - pkg-config
- name: pipModules
  type: object
  default:
    - black
    - clang-format
    - clang-tidy
    - cmake
    - cmake-format
    - dataclasses
    - numpy
    - otf2
    - pandas
    - perfetto
    - pycobertura
    - pytest>=6.2.5
    - pyyaml
- name: rocmDependencies
  type: object
  default:
    - clr
    - llvm-project
    - rccl
    - rocm-cmake
    - rocm-core
    - rocminfo
    - ROCR-Runtime
    - rocprofiler-register
    - roctracer
- name: rocmTestDependencies
  type: object
  default:
    - clr
    - llvm-project
    - rccl
    - rocm-cmake
    - rocm-core
    - rocminfo
    - ROCR-Runtime
    - rocprofiler-register
    - rocprofiler
    - roctracer

jobs:
- job: rocprofiler_sdk
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool:
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        -DROCPROFILER_BUILD_TESTS=ON
        -DROCPROFILER_BUILD_SAMPLES=ON
        -DAMDGPU_TARGETS=$(JOB_GPU_TARGET)
      multithreadFlag: -- -j2
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)

- job: rocprofiler_sdk_testing
  dependsOn: rocprofiler_sdk
  condition: succeeded()
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      ${{ if eq(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, 'amd-staging') }}:
        dependencySource: tag-builds
  - task: CMake@1
    displayName: rocprofiler-sdk test CMake Flags
    inputs:
      cmakeArgs: >-
        -DCMAKE_PREFIX_PATH=$(Agent.BuildDirectory)/rocm
        $(Agent.BuildDirectory)/rocm/share/rocprofiler-sdk/tests
      workingDirectory: rocprofiler-sdk-tests
  - task: Bash@3
    displayName: rocprofiler-sdk test build
    inputs:
      targetType: inline
      workingDirectory: rocprofiler-sdk-tests
      script: cmake --build . -- -j$(nproc)
  - task: Bash@3
    displayName: Update pytest
    inputs:
      targetType: inline
      script: pip install -U pytest
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: rocprofiler-sdk
      testDir: 'rocprofiler-sdk-tests'
